
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOLEAN BREAK CDER CIZQ COMA COMPARACION CONST DIFERENTE DIV DO ECHO ELSE ELSEIF FALSE FIN FLOAT FOR FUSIONNULL GLOBAL IDENTICO IF IGUAL INICIO INTEGER LDER LIZQ MAS MAYOR MAYOROIGUAL MENOR MENOROIGUAL MOD NAVEESPACIAL NOIDENTICO NOT OR PDER PIZQ POTENCIA PROD PTOCO RESTA STATIC STRING TRUE VAR VARIABLE WHILE XORphpSyntax : inicio codigo fin\n    codigo : algoritmo\n                | algoritmo codigo\n    inicio : INICIO\n    fin : FIN\n    algoritmo : asignacion\n                 | declaracion\n                 | comparacion\n                 | condicionalIF\n                 | iteracionFOR\n                 | bucleWHILE\n                 | bucleDO_WHILE\n                 | indexacion\n                 | echo\n                 | terminar\n    asignacion : ambito multiVariable IGUAL expresion PTOCO\n                  | multiVariable IGUAL expresion PTOCO\n    declaracion : ambito multiVariable PTOCO\n                   | multiVariable PTOCO\n    multiVariable : VARIABLE\n                      | VARIABLE COMA multiVariable\n     ambito : STATIC\n               | VAR\n               | GLOBAL\n               | CONST\n    comparacion : valor operadorC expresion PTOCO\n                | valor operadorM expresion PTOCO\n                | valor operadorL expresion PTOCO\n    expresion : valor\n                 | expresion_aritmetica\n                 | expresion_logica\n                 | expresion_comparativa\n    expresion_aritmetica : valor operadorM expresion\n    expresion_logica : valor operadorL expresion\n                        | booleano\n    expresion_comparativa : valor operadorC expresion\n    condicion : expresion_logica\n                | expresion_comparativa\n    operadorM : MAS\n                   | RESTA\n                   | PROD\n                   | DIV\n                   | MOD\n                   | POTENCIA\n    operadorC : MAYOR\n                   | MENOR\n                   | COMPARACION\n                   | IDENTICO\n                   | DIFERENTE\n                   | NOIDENTICO\n                   | MENOROIGUAL\n                   | MAYOROIGUAL\n                   | NAVEESPACIAL\n    terminar : BREAK PTOCO\n    operadorL : AND\n                  | XOR\n                  | OR\n                  | NOT\n    valor : INTEGER\n             | booleano\n             | STRING\n             | FLOAT\n             | VARIABLE\n             | BOOLEAN\n    booleano : TRUE\n                | FALSE\n    adicion : MAS MAS VARIABLE\n    condicionalIF : IF PIZQ condicion PDER LIZQ codigo LDER\n\t\t\t\t\t  | IF PIZQ condicion PDER LIZQ codigo LDER condicionalELSE\n\t\t\t\t\t  | IF PIZQ condicion PDER codigo\n\t\t\t\t\t  | IF PIZQ condicion PDER codigo condicionalELSE\n\tcondicionalELSE : ELSE LIZQ codigo LDER\n\t\t\t\t | ELSEIF PIZQ condicion PDER LIZQ codigo LDER condicionalELSE\n\t\t\t\t | ELSE codigo\n\t\t\t\t | ELSEIF PIZQ condicion PDER codigo condicionalELSE\n\t iteracionFOR : FOR PIZQ asignacion condicion PTOCO adicion PDER codigo\n\t                | FOR PIZQ asignacion condicion PTOCO adicion PDER LIZQ codigo LDER\n\tbucleWHILE : WHILE PIZQ condicion PDER codigo\n\t                | WHILE PIZQ condicion PDER LIZQ codigo LDER\n\tbucleDO_WHILE : DO LIZQ codigo LDER WHILE PIZQ condicion PDER codigo\n\t                | DO LIZQ codigo LDER WHILE PIZQ condicion PDER LIZQ codigo LDER\n\tindexacion :  VARIABLE CIZQ INTEGER CDER\n                    | VARIABLE CIZQ RESTA INTEGER CDER\n                    | VARIABLE CIZQ INTEGER CDER FUSIONNULL\n                    | VARIABLE CIZQ RESTA INTEGER CDER FUSIONNULL\n    echo : ECHO VARIABLE PTOCO\n            | ECHO expresion PTOCO\n    '
    
_lr_action_items = {'INICIO':([0,],[3,]),'$end':([1,37,38,],[0,-1,-5,]),'IF':([2,3,5,6,7,8,9,10,11,12,13,14,15,39,43,69,79,81,100,101,106,107,108,109,110,113,115,120,121,122,124,125,127,128,130,131,137,138,139,140,142,144,146,149,150,152,153,154,156,157,158,160,163,164,166,],[19,-4,19,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-3,-19,19,-54,-18,-86,-87,-17,-26,-27,-28,19,19,-82,-16,19,-70,-78,19,-84,-83,-71,19,-85,-68,19,-74,19,-79,-69,-76,19,19,-72,19,19,-80,19,-77,-75,-81,-73,]),'FOR':([2,3,5,6,7,8,9,10,11,12,13,14,15,39,43,69,79,81,100,101,106,107,108,109,110,113,115,120,121,122,124,125,127,128,130,131,137,138,139,140,142,144,146,149,150,152,153,154,156,157,158,160,163,164,166,],[20,-4,20,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-3,-19,20,-54,-18,-86,-87,-17,-26,-27,-28,20,20,-82,-16,20,-70,-78,20,-84,-83,-71,20,-85,-68,20,-74,20,-79,-69,-76,20,20,-72,20,20,-80,20,-77,-75,-81,-73,]),'WHILE':([2,3,5,6,7,8,9,10,11,12,13,14,15,39,43,69,79,81,100,101,106,107,108,109,110,113,114,115,120,121,122,124,125,127,128,130,131,137,138,139,140,142,144,146,149,150,152,153,154,156,157,158,160,163,164,166,],[21,-4,21,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-3,-19,21,-54,-18,-86,-87,-17,-26,-27,-28,21,21,126,-82,-16,21,-70,-78,21,-84,-83,-71,21,-85,-68,21,-74,21,-79,-69,-76,21,21,-72,21,21,-80,21,-77,-75,-81,-73,]),'DO':([2,3,5,6,7,8,9,10,11,12,13,14,15,39,43,69,79,81,100,101,106,107,108,109,110,113,115,120,121,122,124,125,127,128,130,131,137,138,139,140,142,144,146,149,150,152,153,154,156,157,158,160,163,164,166,],[22,-4,22,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-3,-19,22,-54,-18,-86,-87,-17,-26,-27,-28,22,22,-82,-16,22,-70,-78,22,-84,-83,-71,22,-85,-68,22,-74,22,-79,-69,-76,22,22,-72,22,22,-80,22,-77,-75,-81,-73,]),'VARIABLE':([2,3,5,6,7,8,9,10,11,12,13,14,15,16,25,27,28,29,30,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,79,80,81,92,93,100,101,102,103,104,106,107,108,109,110,113,115,120,121,122,124,125,127,128,130,131,136,137,138,139,140,141,142,143,144,146,149,150,152,153,154,156,157,158,160,163,164,166,],[23,-4,23,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,41,72,-22,-23,-24,-25,-3,83,-19,83,83,83,-45,-46,-47,-48,-49,-50,-51,-52,-53,-39,-40,-41,-42,-43,-44,-55,-56,-57,-58,83,41,83,23,41,-54,83,-18,83,41,-86,-87,83,83,83,-17,-26,-27,-28,23,23,-82,-16,23,-70,-78,23,-84,-83,-71,23,83,-85,-68,23,-74,83,23,151,-79,-69,-76,23,23,-72,23,23,-80,23,-77,-75,-81,-73,]),'ECHO':([2,3,5,6,7,8,9,10,11,12,13,14,15,39,43,69,79,81,100,101,106,107,108,109,110,113,115,120,121,122,124,125,127,128,130,131,137,138,139,140,142,144,146,149,150,152,153,154,156,157,158,160,163,164,166,],[25,-4,25,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-3,-19,25,-54,-18,-86,-87,-17,-26,-27,-28,25,25,-82,-16,25,-70,-78,25,-84,-83,-71,25,-85,-68,25,-74,25,-79,-69,-76,25,25,-72,25,25,-80,25,-77,-75,-81,-73,]),'BREAK':([2,3,5,6,7,8,9,10,11,12,13,14,15,39,43,69,79,81,100,101,106,107,108,109,110,113,115,120,121,122,124,125,127,128,130,131,137,138,139,140,142,144,146,149,150,152,153,154,156,157,158,160,163,164,166,],[26,-4,26,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-3,-19,26,-54,-18,-86,-87,-17,-26,-27,-28,26,26,-82,-16,26,-70,-78,26,-84,-83,-71,26,-85,-68,26,-74,26,-79,-69,-76,26,26,-72,26,26,-80,26,-77,-75,-81,-73,]),'STATIC':([2,3,5,6,7,8,9,10,11,12,13,14,15,39,43,67,69,79,81,100,101,106,107,108,109,110,113,115,120,121,122,124,125,127,128,130,131,137,138,139,140,142,144,146,149,150,152,153,154,156,157,158,160,163,164,166,],[27,-4,27,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-3,-19,27,27,-54,-18,-86,-87,-17,-26,-27,-28,27,27,-82,-16,27,-70,-78,27,-84,-83,-71,27,-85,-68,27,-74,27,-79,-69,-76,27,27,-72,27,27,-80,27,-77,-75,-81,-73,]),'VAR':([2,3,5,6,7,8,9,10,11,12,13,14,15,39,43,67,69,79,81,100,101,106,107,108,109,110,113,115,120,121,122,124,125,127,128,130,131,137,138,139,140,142,144,146,149,150,152,153,154,156,157,158,160,163,164,166,],[28,-4,28,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-3,-19,28,28,-54,-18,-86,-87,-17,-26,-27,-28,28,28,-82,-16,28,-70,-78,28,-84,-83,-71,28,-85,-68,28,-74,28,-79,-69,-76,28,28,-72,28,28,-80,28,-77,-75,-81,-73,]),'GLOBAL':([2,3,5,6,7,8,9,10,11,12,13,14,15,39,43,67,69,79,81,100,101,106,107,108,109,110,113,115,120,121,122,124,125,127,128,130,131,137,138,139,140,142,144,146,149,150,152,153,154,156,157,158,160,163,164,166,],[29,-4,29,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-3,-19,29,29,-54,-18,-86,-87,-17,-26,-27,-28,29,29,-82,-16,29,-70,-78,29,-84,-83,-71,29,-85,-68,29,-74,29,-79,-69,-76,29,29,-72,29,29,-80,29,-77,-75,-81,-73,]),'CONST':([2,3,5,6,7,8,9,10,11,12,13,14,15,39,43,67,69,79,81,100,101,106,107,108,109,110,113,115,120,121,122,124,125,127,128,130,131,137,138,139,140,142,144,146,149,150,152,153,154,156,157,158,160,163,164,166,],[30,-4,30,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-3,-19,30,30,-54,-18,-86,-87,-17,-26,-27,-28,30,30,-82,-16,30,-70,-78,30,-84,-83,-71,30,-85,-68,30,-74,30,-79,-69,-76,30,30,-72,30,30,-80,30,-77,-75,-81,-73,]),'INTEGER':([2,3,5,6,7,8,9,10,11,12,13,14,15,25,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,79,80,81,92,98,100,101,102,103,104,106,107,108,109,110,113,115,120,121,122,124,125,127,128,130,131,136,137,138,139,140,141,142,144,146,149,150,152,153,154,156,157,158,160,163,164,166,],[24,-4,24,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,24,-3,24,-19,24,24,24,-45,-46,-47,-48,-49,-50,-51,-52,-53,-39,-40,-41,-42,-43,-44,-55,-56,-57,-58,24,24,24,97,-54,24,-18,24,116,-86,-87,24,24,24,-17,-26,-27,-28,24,24,-82,-16,24,-70,-78,24,-84,-83,-71,24,24,-85,-68,24,-74,24,24,-79,-69,-76,24,24,-72,24,24,-80,24,-77,-75,-81,-73,]),'STRING':([2,3,5,6,7,8,9,10,11,12,13,14,15,25,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,79,80,81,92,100,101,102,103,104,106,107,108,109,110,113,115,120,121,122,124,125,127,128,130,131,136,137,138,139,140,141,142,144,146,149,150,152,153,154,156,157,158,160,163,164,166,],[32,-4,32,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,32,-3,32,-19,32,32,32,-45,-46,-47,-48,-49,-50,-51,-52,-53,-39,-40,-41,-42,-43,-44,-55,-56,-57,-58,32,32,32,-54,32,-18,32,-86,-87,32,32,32,-17,-26,-27,-28,32,32,-82,-16,32,-70,-78,32,-84,-83,-71,32,32,-85,-68,32,-74,32,32,-79,-69,-76,32,32,-72,32,32,-80,32,-77,-75,-81,-73,]),'FLOAT':([2,3,5,6,7,8,9,10,11,12,13,14,15,25,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,79,80,81,92,100,101,102,103,104,106,107,108,109,110,113,115,120,121,122,124,125,127,128,130,131,136,137,138,139,140,141,142,144,146,149,150,152,153,154,156,157,158,160,163,164,166,],[33,-4,33,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,33,-3,33,-19,33,33,33,-45,-46,-47,-48,-49,-50,-51,-52,-53,-39,-40,-41,-42,-43,-44,-55,-56,-57,-58,33,33,33,-54,33,-18,33,-86,-87,33,33,33,-17,-26,-27,-28,33,33,-82,-16,33,-70,-78,33,-84,-83,-71,33,33,-85,-68,33,-74,33,33,-79,-69,-76,33,33,-72,33,33,-80,33,-77,-75,-81,-73,]),'BOOLEAN':([2,3,5,6,7,8,9,10,11,12,13,14,15,25,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,79,80,81,92,100,101,102,103,104,106,107,108,109,110,113,115,120,121,122,124,125,127,128,130,131,136,137,138,139,140,141,142,144,146,149,150,152,153,154,156,157,158,160,163,164,166,],[34,-4,34,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,34,-3,34,-19,34,34,34,-45,-46,-47,-48,-49,-50,-51,-52,-53,-39,-40,-41,-42,-43,-44,-55,-56,-57,-58,34,34,34,-54,34,-18,34,-86,-87,34,34,34,-17,-26,-27,-28,34,34,-82,-16,34,-70,-78,34,-84,-83,-71,34,34,-85,-68,34,-74,34,34,-79,-69,-76,34,34,-72,34,34,-80,34,-77,-75,-81,-73,]),'TRUE':([2,3,5,6,7,8,9,10,11,12,13,14,15,25,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,79,80,81,92,100,101,102,103,104,106,107,108,109,110,113,115,120,121,122,124,125,127,128,130,131,136,137,138,139,140,141,142,144,146,149,150,152,153,154,156,157,158,160,163,164,166,],[35,-4,35,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,35,-3,35,-19,35,35,35,-45,-46,-47,-48,-49,-50,-51,-52,-53,-39,-40,-41,-42,-43,-44,-55,-56,-57,-58,35,35,35,-54,35,-18,35,-86,-87,35,35,35,-17,-26,-27,-28,35,35,-82,-16,35,-70,-78,35,-84,-83,-71,35,35,-85,-68,35,-74,35,35,-79,-69,-76,35,35,-72,35,35,-80,35,-77,-75,-81,-73,]),'FALSE':([2,3,5,6,7,8,9,10,11,12,13,14,15,25,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,79,80,81,92,100,101,102,103,104,106,107,108,109,110,113,115,120,121,122,124,125,127,128,130,131,136,137,138,139,140,141,142,144,146,149,150,152,153,154,156,157,158,160,163,164,166,],[36,-4,36,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,36,-3,36,-19,36,36,36,-45,-46,-47,-48,-49,-50,-51,-52,-53,-39,-40,-41,-42,-43,-44,-55,-56,-57,-58,36,36,36,-54,36,-18,36,-86,-87,36,36,36,-17,-26,-27,-28,36,36,-82,-16,36,-70,-78,36,-84,-83,-71,36,36,-85,-68,36,-74,36,36,-79,-69,-76,36,36,-72,36,36,-80,36,-77,-75,-81,-73,]),'FIN':([4,5,6,7,8,9,10,11,12,13,14,15,39,43,79,81,100,101,106,107,108,109,115,120,122,124,127,128,130,137,138,140,144,146,149,153,157,160,163,164,166,],[38,-2,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-3,-19,-54,-18,-86,-87,-17,-26,-27,-28,-82,-16,-70,-78,-84,-83,-71,-85,-68,-74,-79,-69,-76,-72,-80,-77,-75,-81,-73,]),'LDER':([5,6,7,8,9,10,11,12,13,14,15,39,43,79,81,96,100,101,106,107,108,109,115,120,122,124,127,128,129,130,135,137,138,140,144,146,147,149,153,155,157,160,161,162,163,164,166,],[-2,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-3,-19,-54,-18,114,-86,-87,-17,-26,-27,-28,-82,-16,-70,-78,-84,-83,138,-71,144,-85,-68,-74,-79,-69,153,-76,-72,160,-80,-77,164,165,-75,-81,-73,]),'ELSE':([5,6,7,8,9,10,11,12,13,14,15,39,43,79,81,100,101,106,107,108,109,115,120,122,124,127,128,130,137,138,140,144,146,149,153,157,159,160,163,164,165,166,],[-2,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-3,-19,-54,-18,-86,-87,-17,-26,-27,-28,-82,-16,131,-78,-84,-83,-71,-85,131,-74,-79,-69,-76,-72,-80,131,-77,-75,-81,131,-73,]),'ELSEIF':([5,6,7,8,9,10,11,12,13,14,15,39,43,79,81,100,101,106,107,108,109,115,120,122,124,127,128,130,137,138,140,144,146,149,153,157,159,160,163,164,165,166,],[-2,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-3,-19,-54,-18,-86,-87,-17,-26,-27,-28,-82,-16,132,-78,-84,-83,-71,-85,132,-74,-79,-69,-76,-72,-80,132,-77,-75,-81,132,-73,]),'IGUAL':([17,23,40,41,94,99,112,],[42,-20,80,-20,42,-21,80,]),'PTOCO':([17,23,24,26,32,33,34,35,36,40,41,72,73,74,75,76,77,78,82,83,84,85,86,88,89,91,99,105,111,117,118,119,],[43,-20,-59,79,-61,-62,-64,-65,-66,81,-20,100,101,-29,-30,-31,-32,-35,106,-63,107,108,109,-37,-38,-35,-21,120,123,-33,-34,-36,]),'MAYOR':([18,23,24,31,32,33,34,35,36,72,74,78,83,90,91,],[47,-63,-59,-60,-61,-62,-64,-65,-66,-63,47,-60,-63,47,-60,]),'MENOR':([18,23,24,31,32,33,34,35,36,72,74,78,83,90,91,],[48,-63,-59,-60,-61,-62,-64,-65,-66,-63,48,-60,-63,48,-60,]),'COMPARACION':([18,23,24,31,32,33,34,35,36,72,74,78,83,90,91,],[49,-63,-59,-60,-61,-62,-64,-65,-66,-63,49,-60,-63,49,-60,]),'IDENTICO':([18,23,24,31,32,33,34,35,36,72,74,78,83,90,91,],[50,-63,-59,-60,-61,-62,-64,-65,-66,-63,50,-60,-63,50,-60,]),'DIFERENTE':([18,23,24,31,32,33,34,35,36,72,74,78,83,90,91,],[51,-63,-59,-60,-61,-62,-64,-65,-66,-63,51,-60,-63,51,-60,]),'NOIDENTICO':([18,23,24,31,32,33,34,35,36,72,74,78,83,90,91,],[52,-63,-59,-60,-61,-62,-64,-65,-66,-63,52,-60,-63,52,-60,]),'MENOROIGUAL':([18,23,24,31,32,33,34,35,36,72,74,78,83,90,91,],[53,-63,-59,-60,-61,-62,-64,-65,-66,-63,53,-60,-63,53,-60,]),'MAYOROIGUAL':([18,23,24,31,32,33,34,35,36,72,74,78,83,90,91,],[54,-63,-59,-60,-61,-62,-64,-65,-66,-63,54,-60,-63,54,-60,]),'NAVEESPACIAL':([18,23,24,31,32,33,34,35,36,72,74,78,83,90,91,],[55,-63,-59,-60,-61,-62,-64,-65,-66,-63,55,-60,-63,55,-60,]),'MAS':([18,23,24,31,32,33,34,35,36,72,74,78,83,123,134,],[56,-63,-59,-60,-61,-62,-64,-65,-66,-63,56,-60,-63,134,143,]),'RESTA':([18,23,24,31,32,33,34,35,36,70,72,74,78,83,],[57,-63,-59,-60,-61,-62,-64,-65,-66,98,-63,57,-60,-63,]),'PROD':([18,23,24,31,32,33,34,35,36,72,74,78,83,],[58,-63,-59,-60,-61,-62,-64,-65,-66,-63,58,-60,-63,]),'DIV':([18,23,24,31,32,33,34,35,36,72,74,78,83,],[59,-63,-59,-60,-61,-62,-64,-65,-66,-63,59,-60,-63,]),'MOD':([18,23,24,31,32,33,34,35,36,72,74,78,83,],[60,-63,-59,-60,-61,-62,-64,-65,-66,-63,60,-60,-63,]),'POTENCIA':([18,23,24,31,32,33,34,35,36,72,74,78,83,],[61,-63,-59,-60,-61,-62,-64,-65,-66,-63,61,-60,-63,]),'AND':([18,23,24,31,32,33,34,35,36,72,74,78,83,90,91,],[62,-63,-59,-60,-61,-62,-64,-65,-66,-63,62,-60,-63,62,-60,]),'XOR':([18,23,24,31,32,33,34,35,36,72,74,78,83,90,91,],[63,-63,-59,-60,-61,-62,-64,-65,-66,-63,63,-60,-63,63,-60,]),'OR':([18,23,24,31,32,33,34,35,36,72,74,78,83,90,91,],[64,-63,-59,-60,-61,-62,-64,-65,-66,-63,64,-60,-63,64,-60,]),'NOT':([18,23,24,31,32,33,34,35,36,72,74,78,83,90,91,],[65,-63,-59,-60,-61,-62,-64,-65,-66,-63,65,-60,-63,65,-60,]),'PIZQ':([19,20,21,126,132,],[66,67,68,136,141,]),'LIZQ':([22,110,113,131,142,152,154,],[69,121,125,139,150,156,158,]),'CIZQ':([23,],[70,]),'COMA':([23,41,],[71,71,]),'PDER':([24,32,33,34,35,36,74,75,76,77,78,83,87,88,89,91,95,117,118,119,133,145,148,151,],[-59,-61,-62,-64,-65,-66,-29,-30,-31,-32,-35,-63,110,-37,-38,-35,113,-33,-34,-36,142,152,154,-67,]),'CDER':([97,116,],[115,128,]),'FUSIONNULL':([115,128,],[127,137,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'phpSyntax':([0,],[1,]),'inicio':([0,],[2,]),'codigo':([2,5,69,110,113,121,125,131,139,142,150,152,154,156,158,],[4,39,96,122,124,129,135,140,147,149,155,157,159,161,162,]),'algoritmo':([2,5,69,110,113,121,125,131,139,142,150,152,154,156,158,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'asignacion':([2,5,67,69,110,113,121,125,131,139,142,150,152,154,156,158,],[6,6,92,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'declaracion':([2,5,69,110,113,121,125,131,139,142,150,152,154,156,158,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'comparacion':([2,5,69,110,113,121,125,131,139,142,150,152,154,156,158,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'condicionalIF':([2,5,69,110,113,121,125,131,139,142,150,152,154,156,158,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'iteracionFOR':([2,5,69,110,113,121,125,131,139,142,150,152,154,156,158,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'bucleWHILE':([2,5,69,110,113,121,125,131,139,142,150,152,154,156,158,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'bucleDO_WHILE':([2,5,69,110,113,121,125,131,139,142,150,152,154,156,158,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'indexacion':([2,5,69,110,113,121,125,131,139,142,150,152,154,156,158,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'echo':([2,5,69,110,113,121,125,131,139,142,150,152,154,156,158,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'terminar':([2,5,69,110,113,121,125,131,139,142,150,152,154,156,158,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'ambito':([2,5,67,69,110,113,121,125,131,139,142,150,152,154,156,158,],[16,16,93,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'multiVariable':([2,5,16,67,69,71,93,110,113,121,125,131,139,142,150,152,154,156,158,],[17,17,40,94,17,99,112,17,17,17,17,17,17,17,17,17,17,17,17,]),'valor':([2,5,25,42,44,45,46,66,68,69,80,92,102,103,104,110,113,121,125,131,136,139,141,142,150,152,154,156,158,],[18,18,74,74,74,74,74,90,90,18,74,90,74,74,74,18,18,18,18,18,90,18,90,18,18,18,18,18,18,]),'booleano':([2,5,25,42,44,45,46,66,68,69,80,92,102,103,104,110,113,121,125,131,136,139,141,142,150,152,154,156,158,],[31,31,78,78,78,78,78,91,91,31,78,91,78,78,78,31,31,31,31,31,91,31,91,31,31,31,31,31,31,]),'fin':([4,],[37,]),'operadorC':([18,74,90,],[44,104,104,]),'operadorM':([18,74,],[45,102,]),'operadorL':([18,74,90,],[46,103,103,]),'expresion':([25,42,44,45,46,80,102,103,104,],[73,82,84,85,86,105,117,118,119,]),'expresion_aritmetica':([25,42,44,45,46,80,102,103,104,],[75,75,75,75,75,75,75,75,75,]),'expresion_logica':([25,42,44,45,46,66,68,80,92,102,103,104,136,141,],[76,76,76,76,76,88,88,76,88,76,76,76,88,88,]),'expresion_comparativa':([25,42,44,45,46,66,68,80,92,102,103,104,136,141,],[77,77,77,77,77,89,89,77,89,77,77,77,89,89,]),'condicion':([66,68,92,136,141,],[87,95,111,145,148,]),'condicionalELSE':([122,138,159,165,],[130,146,163,166,]),'adicion':([123,],[133,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> phpSyntax","S'",1,None,None,None),
  ('phpSyntax -> inicio codigo fin','phpSyntax',3,'p_phpSyntax','php_parserLP.py',5),
  ('codigo -> algoritmo','codigo',1,'p_codigo','php_parserLP.py',9),
  ('codigo -> algoritmo codigo','codigo',2,'p_codigo','php_parserLP.py',10),
  ('inicio -> INICIO','inicio',1,'p_inicio','php_parserLP.py',14),
  ('fin -> FIN','fin',1,'p_fin','php_parserLP.py',18),
  ('algoritmo -> asignacion','algoritmo',1,'p_algoritmo','php_parserLP.py',22),
  ('algoritmo -> declaracion','algoritmo',1,'p_algoritmo','php_parserLP.py',23),
  ('algoritmo -> comparacion','algoritmo',1,'p_algoritmo','php_parserLP.py',24),
  ('algoritmo -> condicionalIF','algoritmo',1,'p_algoritmo','php_parserLP.py',25),
  ('algoritmo -> iteracionFOR','algoritmo',1,'p_algoritmo','php_parserLP.py',26),
  ('algoritmo -> bucleWHILE','algoritmo',1,'p_algoritmo','php_parserLP.py',27),
  ('algoritmo -> bucleDO_WHILE','algoritmo',1,'p_algoritmo','php_parserLP.py',28),
  ('algoritmo -> indexacion','algoritmo',1,'p_algoritmo','php_parserLP.py',29),
  ('algoritmo -> echo','algoritmo',1,'p_algoritmo','php_parserLP.py',30),
  ('algoritmo -> terminar','algoritmo',1,'p_algoritmo','php_parserLP.py',31),
  ('asignacion -> ambito multiVariable IGUAL expresion PTOCO','asignacion',5,'p_asignacion','php_parserLP.py',35),
  ('asignacion -> multiVariable IGUAL expresion PTOCO','asignacion',4,'p_asignacion','php_parserLP.py',36),
  ('declaracion -> ambito multiVariable PTOCO','declaracion',3,'p_declaracion','php_parserLP.py',40),
  ('declaracion -> multiVariable PTOCO','declaracion',2,'p_declaracion','php_parserLP.py',41),
  ('multiVariable -> VARIABLE','multiVariable',1,'p_multiVariable','php_parserLP.py',45),
  ('multiVariable -> VARIABLE COMA multiVariable','multiVariable',3,'p_multiVariable','php_parserLP.py',46),
  ('ambito -> STATIC','ambito',1,'p_ambito','php_parserLP.py',50),
  ('ambito -> VAR','ambito',1,'p_ambito','php_parserLP.py',51),
  ('ambito -> GLOBAL','ambito',1,'p_ambito','php_parserLP.py',52),
  ('ambito -> CONST','ambito',1,'p_ambito','php_parserLP.py',53),
  ('comparacion -> valor operadorC expresion PTOCO','comparacion',4,'p_comparacion','php_parserLP.py',57),
  ('comparacion -> valor operadorM expresion PTOCO','comparacion',4,'p_comparacion','php_parserLP.py',58),
  ('comparacion -> valor operadorL expresion PTOCO','comparacion',4,'p_comparacion','php_parserLP.py',59),
  ('expresion -> valor','expresion',1,'p_expresion','php_parserLP.py',64),
  ('expresion -> expresion_aritmetica','expresion',1,'p_expresion','php_parserLP.py',65),
  ('expresion -> expresion_logica','expresion',1,'p_expresion','php_parserLP.py',66),
  ('expresion -> expresion_comparativa','expresion',1,'p_expresion','php_parserLP.py',67),
  ('expresion_aritmetica -> valor operadorM expresion','expresion_aritmetica',3,'p_expresion_aritmetica','php_parserLP.py',72),
  ('expresion_logica -> valor operadorL expresion','expresion_logica',3,'p_expresion_logica','php_parserLP.py',76),
  ('expresion_logica -> booleano','expresion_logica',1,'p_expresion_logica','php_parserLP.py',77),
  ('expresion_comparativa -> valor operadorC expresion','expresion_comparativa',3,'p_expresion_comparativa','php_parserLP.py',81),
  ('condicion -> expresion_logica','condicion',1,'p_condicion','php_parserLP.py',85),
  ('condicion -> expresion_comparativa','condicion',1,'p_condicion','php_parserLP.py',86),
  ('operadorM -> MAS','operadorM',1,'p_operadorM','php_parserLP.py',90),
  ('operadorM -> RESTA','operadorM',1,'p_operadorM','php_parserLP.py',91),
  ('operadorM -> PROD','operadorM',1,'p_operadorM','php_parserLP.py',92),
  ('operadorM -> DIV','operadorM',1,'p_operadorM','php_parserLP.py',93),
  ('operadorM -> MOD','operadorM',1,'p_operadorM','php_parserLP.py',94),
  ('operadorM -> POTENCIA','operadorM',1,'p_operadorM','php_parserLP.py',95),
  ('operadorC -> MAYOR','operadorC',1,'p_operadorC','php_parserLP.py',99),
  ('operadorC -> MENOR','operadorC',1,'p_operadorC','php_parserLP.py',100),
  ('operadorC -> COMPARACION','operadorC',1,'p_operadorC','php_parserLP.py',101),
  ('operadorC -> IDENTICO','operadorC',1,'p_operadorC','php_parserLP.py',102),
  ('operadorC -> DIFERENTE','operadorC',1,'p_operadorC','php_parserLP.py',103),
  ('operadorC -> NOIDENTICO','operadorC',1,'p_operadorC','php_parserLP.py',104),
  ('operadorC -> MENOROIGUAL','operadorC',1,'p_operadorC','php_parserLP.py',105),
  ('operadorC -> MAYOROIGUAL','operadorC',1,'p_operadorC','php_parserLP.py',106),
  ('operadorC -> NAVEESPACIAL','operadorC',1,'p_operadorC','php_parserLP.py',107),
  ('terminar -> BREAK PTOCO','terminar',2,'p_terminar','php_parserLP.py',111),
  ('operadorL -> AND','operadorL',1,'p_operadorL','php_parserLP.py',116),
  ('operadorL -> XOR','operadorL',1,'p_operadorL','php_parserLP.py',117),
  ('operadorL -> OR','operadorL',1,'p_operadorL','php_parserLP.py',118),
  ('operadorL -> NOT','operadorL',1,'p_operadorL','php_parserLP.py',119),
  ('valor -> INTEGER','valor',1,'p_valor','php_parserLP.py',124),
  ('valor -> booleano','valor',1,'p_valor','php_parserLP.py',125),
  ('valor -> STRING','valor',1,'p_valor','php_parserLP.py',126),
  ('valor -> FLOAT','valor',1,'p_valor','php_parserLP.py',127),
  ('valor -> VARIABLE','valor',1,'p_valor','php_parserLP.py',128),
  ('valor -> BOOLEAN','valor',1,'p_valor','php_parserLP.py',129),
  ('booleano -> TRUE','booleano',1,'p_booleano','php_parserLP.py',133),
  ('booleano -> FALSE','booleano',1,'p_booleano','php_parserLP.py',134),
  ('adicion -> MAS MAS VARIABLE','adicion',3,'p_adicion','php_parserLP.py',138),
  ('condicionalIF -> IF PIZQ condicion PDER LIZQ codigo LDER','condicionalIF',7,'p_condicionalIF','php_parserLP.py',142),
  ('condicionalIF -> IF PIZQ condicion PDER LIZQ codigo LDER condicionalELSE','condicionalIF',8,'p_condicionalIF','php_parserLP.py',143),
  ('condicionalIF -> IF PIZQ condicion PDER codigo','condicionalIF',5,'p_condicionalIF','php_parserLP.py',144),
  ('condicionalIF -> IF PIZQ condicion PDER codigo condicionalELSE','condicionalIF',6,'p_condicionalIF','php_parserLP.py',145),
  ('condicionalELSE -> ELSE LIZQ codigo LDER','condicionalELSE',4,'p_condicionalELSE','php_parserLP.py',149),
  ('condicionalELSE -> ELSEIF PIZQ condicion PDER LIZQ codigo LDER condicionalELSE','condicionalELSE',8,'p_condicionalELSE','php_parserLP.py',150),
  ('condicionalELSE -> ELSE codigo','condicionalELSE',2,'p_condicionalELSE','php_parserLP.py',151),
  ('condicionalELSE -> ELSEIF PIZQ condicion PDER codigo condicionalELSE','condicionalELSE',6,'p_condicionalELSE','php_parserLP.py',152),
  ('iteracionFOR -> FOR PIZQ asignacion condicion PTOCO adicion PDER codigo','iteracionFOR',8,'p_iteracionFOR','php_parserLP.py',156),
  ('iteracionFOR -> FOR PIZQ asignacion condicion PTOCO adicion PDER LIZQ codigo LDER','iteracionFOR',10,'p_iteracionFOR','php_parserLP.py',157),
  ('bucleWHILE -> WHILE PIZQ condicion PDER codigo','bucleWHILE',5,'p_bucleWHILE','php_parserLP.py',161),
  ('bucleWHILE -> WHILE PIZQ condicion PDER LIZQ codigo LDER','bucleWHILE',7,'p_bucleWHILE','php_parserLP.py',162),
  ('bucleDO_WHILE -> DO LIZQ codigo LDER WHILE PIZQ condicion PDER codigo','bucleDO_WHILE',9,'p_bucleDO_WHILE','php_parserLP.py',166),
  ('bucleDO_WHILE -> DO LIZQ codigo LDER WHILE PIZQ condicion PDER LIZQ codigo LDER','bucleDO_WHILE',11,'p_bucleDO_WHILE','php_parserLP.py',167),
  ('indexacion -> VARIABLE CIZQ INTEGER CDER','indexacion',4,'p_indexacion','php_parserLP.py',171),
  ('indexacion -> VARIABLE CIZQ RESTA INTEGER CDER','indexacion',5,'p_indexacion','php_parserLP.py',172),
  ('indexacion -> VARIABLE CIZQ INTEGER CDER FUSIONNULL','indexacion',5,'p_indexacion','php_parserLP.py',173),
  ('indexacion -> VARIABLE CIZQ RESTA INTEGER CDER FUSIONNULL','indexacion',6,'p_indexacion','php_parserLP.py',174),
  ('echo -> ECHO VARIABLE PTOCO','echo',3,'p_echo','php_parserLP.py',178),
  ('echo -> ECHO expresion PTOCO','echo',3,'p_echo','php_parserLP.py',179),
]
